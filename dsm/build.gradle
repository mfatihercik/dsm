buildscript {
    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
        jcenter ()
    }
    dependencies {
        classpath ("io.spring.gradle:propdeps-plugin:0.0.9.RELEASE")
    }
}
plugins {
    id "com.jfrog.bintray" version "1.8.4"
}


apply plugin: 'propdeps-maven'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'groovy'


gradle.startParameter.showStacktrace = org.gradle.api.logging.configuration.ShowStacktrace.ALWAYS


group = 'com.github.mfatihercik'
version = '1.0.4'
sourceCompatibility = '1.7'
targetCompatibility = '1.7'


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}
tasks.withType (Javadoc){
    options.addStringOption('Xdoclint:none', '-quiet')
}
publishing {
    publications {
        DSMPublication (MavenPublication) {
            from components.java
            artifactId='dsm'
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Declarative Stream Mapping (DSM)'
                description = 'Declarative way to parse JSON and XML format'
                url = 'https://github.com/mfatihercik/dsm'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://choosealicense.com/licenses/mit'
                    }
                }
                developers {
                    developer {
                        id = 'mfatihercik'
                        name = 'Mehmet Fatih Ercik'
                        email = 'mfatihercik@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/mfatihercik/dsm.git'
                    developerConnection = 'scm:git:ssh://github.com/mfatihercik/dsm.git'
                    url = 'https://github.com/mfatihercik/dsm'
                }
            }
        }
    }
}






repositories {
    jcenter ()
    mavenCentral ()
}

bintray {
    user = 'mfatihercik'
    publications = ['DSMPublication']
    pkg {
        repo = 'github'
        name = 'dsm'
        vcsUrl='https://github.com/mfatihercik/dsm'
        websiteUrl = 'https://mfatihercik.github.io/dsm'
        issueTrackerUrl = 'https://github.com/mfatihercik/dsm/issues'
        licenses=['MIT']
        publicDownloadNumbers = true
        githubRepo = 'mfatihercik/dsm' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        version {
            name = '1.0.4'
            desc = 'Declarative Stream Mapping (DSM)'
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = 'DSMLibrary13' //Optional. The passphrase for GPG signing'
            }
            released = new Date ()
            vcsTag = '1.0.0'
        }
    }
}



dependencies {

    compile ("org.apache.commons:commons-jexl3:3.1")
    compile ("org.yaml:snakeyaml:1.23")
    compile ("com.fasterxml.jackson.core:jackson-databind:2.9.7")

    optional group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '2.5.6'

    testCompile ("junit:junit:4.12")
    testCompile ("org.mockito:mockito-core:2.23.0")

    testCompile "cglib:cglib:3.2.10"
    testCompile "org.codehaus.groovy:groovy-all:2.5.6"
    testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
    testCompile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.4")

    // Use JUnit test framework
    testImplementation ('junit:junit:4.12')
}
test {
    useJUnit ()
    testLogging {
        showStandardStreams = true
    }
    maxHeapSize = '1G'
}

