buildscript {
    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
        jcenter()
    }
    dependencies {
        classpath("io.spring.gradle:propdeps-plugin:0.0.9.RELEASE")
    }
}


apply plugin: 'signing'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'groovy'


gradle.startParameter.showStacktrace = ShowStacktrace.ALWAYS


group = 'com.github.mfatihercik'
version = '1.0.5'
sourceCompatibility = '1.7'
targetCompatibility = '1.7'


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}
publishing {
    publications {
        maven(MavenPublication) {
            group = 'com.github.mfatihercik'
            artifactId = 'dsm'
            version = '1.0.5'
            artifact sourcesJar
            artifact javadocJar
            from components.java
            pom {
                name = 'Declarative Stream Mapping (DSM)'
                description = 'Declarative way to parse JSON and XML format'
                url = 'https://github.com/mfatihercik/dsm'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://choosealicense.com/licenses/mit'
                    }
                }
                developers {
                    developer {
                        id = 'mfatihercik'
                        name = 'Mehmet Fatih Ercik'
                        email = 'mfatihercik@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/mfatihercik/dsm.git'
                    developerConnection = 'scm:git:ssh://github.com/mfatihercik/dsm.git'
                    url = 'https://github.com/mfatihercik/dsm'
                }
            }
        }

    }
    repositories {
        maven {
            credentials {
                username = "$usr"
                password = "$pwd"
            }

            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
//            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
        }
    }
}

signing {
    sign publishing.publications
}

repositories {
    mavenCentral()
}

dependencies {

    compile('org.apache.commons:commons-jexl3:3.2.1')
    compile('org.yaml:snakeyaml:2.0')
    compile('com.fasterxml.jackson.core:jackson-databind:2.15.1')

    optional group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '2.5.6'

    testCompile('junit:junit:4.13.1')
    testCompile("org.mockito:mockito-core:2.23.0")

    testCompile 'cglib:cglib:3.3.0'
    testCompile 'org.codehaus.groovy:groovy-all:2.5.6'
    testCompile 'org.spockframework:spock-core:2.3-groovy-2.5'
    testCompile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.2')

    // Use JUnit test framework
    testImplementation('junit:junit:4.13.1')
}
test {
    useJUnit()
    testLogging {
        showStandardStreams = true
    }
    maxHeapSize = '1G'
}

